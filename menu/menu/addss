#!/bin/bash

NC='\e[0m'
GREEN='\033[0;32m'
grenbo="\e[92;1m"

red() { echo -e "\\033[32;1m${*}\\033[0m"; }
#===================================
# Getting
CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
export TIME="10"
export URL="https://api.telegram.org/bot$KEY/sendMessage"
clear
# getting notif trx
CHATID2=$(grep -E "^#bot# " "/etc/bottrx/.bot.db" | cut -d ' ' -f 3)
KEY2=$(grep -E "^#bot# " "/etc/bottrx/.bot.db" | cut -d ' ' -f 2)
export TIME="10"
export URL2="https://api.telegram.org/bot$KEY2/sendMessage"
clear
#===================================
# detail server
IP=$(curl -sS ipv4.icanhazip.com)
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
CITY=$(curl -s ipinfo.io/city )
domain=$(cat /etc/xray/domain)
clear

sspwd=$(cat /etc/xray/passwd)
clear
domain=$(cat /etc/xray/domain)
clear
#tls="$(cat ~/log-install.txt | grep -w "Sodosok WS/GRPC" | cut -d: -f2|sed 's/ //g')"
until [[ $user =~ ^[a-zA-Z0-9_]+$ && ${CLIENT_EXISTS} == '0' ]]; do
# // color
grs="\033[1;93m"
bg="\033[42m"
gr="\e[92;1m"
NC='\033[0m'
clear
echo -e ""
echo -e "${grs}┌───────────────────────────────────────────────┐${NC}"
echo -e "${grs}│${bg}              ADD ACCOUNT SHDWSCKS             ${NC}${grs}│${NC}"
echo -e "${grs}└───────────────────────────────────────────────┘${NC}"
echo -e ""
		read -rp "Username       : " -e user
		CLIENT_EXISTS=$(grep -w $user /etc/xray/config.json | wc -l)

		if [[ ${CLIENT_EXISTS} == '1' ]]; then
clear
            echo -e "\033[1;93m┌──────────────────────────────────────────┐\033[0m"
            echo -e "\\E[0;41;36m      Add Sodosok Ws/Grpc Account      \E[0m"
            echo -e "\033[1;93m└──────────────────────────────────────────┘\033[0m"
			echo ""
			echo " Nickname or username Is Ready !! "
			echo ""
			echo -e "\033[1;93m──────────────────────────────────────────\033[0m"
			read -n 1 -s -r -p "Press any key to back on menu"
v2ray-menu
		fi
	done

cipher="aes-128-gcm"
uuid=$(cat /proc/sys/kernel/random/uuid)
read -p "Expired (days) : " masaaktif
read -p "Limit IP       : " iplimit
read -p "Limit User (GB): " Quota
read -p "Username Buyer : " pembeli
tgl=$(date -d "$masaaktif days" +"%d")
bln=$(date -d "$masaaktif days" +"%b")
thn=$(date -d "$masaaktif days" +"%Y")
expe="$tgl $bln, $thn"
tgl2=$(date +"%d")
bln2=$(date +"%b")
thn2=$(date +"%Y")
tnggl="$tgl2 $bln2, $thn2"
exp=`date -d "$masaaktif days" +"%Y-%m-%d"`
sed -i '/#ssws$/a\#!# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
sed -i '/#ssgrpc$/a\#!# '"$user $exp"'\
},{"password": "'""$uuid""'","method": "'""$cipher""'","email": "'""$user""'"' /etc/xray/config.json
echo $cipher:$uuid > /tmp/log
shadowsocks_base64=$(cat /tmp/log)
echo -n "${shadowsocks_base64}" | base64 > /tmp/log1
shadowsocks_base64e=$(cat /tmp/log1)
shadowsockslink="ss://${shadowsocks_base64e}@$domain:$tls?plugin=xray-plugin;mux=0;path=/ss-ws;host=$domain;tls#${user}"
shadowsockslink1="ss://${shadowsocks_base64e}@$domain:$tls?plugin=xray-plugin;mux=0;serviceName=ss-grpc;host=$domain;tls#${user}"

#buat ss WEBSOCKET
sslinkws="ss://${shadowsocks_base64e}@${domain}:443?path=/ss-ws&security=tls&encryption=none&type=ws#${user}"
nonsslinkws="ss://${shadowsocks_base64e}@${domain}:80?path=/ss-ws&security=none&encryption=none&type=ws#${user}"

#buat ss GRPC
sslinkgrpc="ss://${shadowsocks_base64e}@${domain}:443?mode=gun&security=tls&encryption=none&type=grpc&serviceName=ss-grpc&sni=bug.com#${user}"
nonsslinkgrpc="ss://${shadowsocks_base64e}@${domain}:80?mode=gun&security=none&encryption=none&type=grpc&serviceName=ss-grpc&sni=bug.com#${user}"

systemctl restart xray
#buatshadowsocks custom
rm -rf /tmp/log
rm -rf /tmp/log1
cat > /var/www/html/sodosokws-$user.txt <<-END
{ 
 "dns": {
    "servers": [
      "8.8.8.8",
      "8.8.4.4"
    ]
  },
 "inbounds": [
   {
      "port": 10808,
      "protocol": "socks",
      "settings": {
        "auth": "noauth",
        "udp": true,
        "userLevel": 8
      },
      "sniffing": {
        "destOverride": [
          "http",
          "tls"
        ],
        "enabled": true
      },
      "tag": "socks"
    },
    {
      "port": 10809,
      "protocol": "http",
      "settings": {
        "userLevel": 8
      },
      "tag": "http"
    }
  ],
  "log": {
    "loglevel": "none"
  },
  "outbounds": [
    {
      "mux": {
        "enabled": true
      },
      "protocol": "shadowsocks",
      "settings": {
        "servers": [
          {
            "address": "$domain",
            "level": 8,
            "method": "$cipher",
            "password": "$uuid",
            "port": 443
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "security": "tls",
        "tlsSettings": {
          "allowInsecure": true,
          "serverName": "isi_bug_disini"
        },
        "wsSettings": {
          "headers": {
            "Host": "$domain"
          },
          "path": "/ss-ws"
        }
      },
      "tag": "proxy"
    },
    {
      "protocol": "freedom",
      "settings": {},
      "tag": "direct"
    },
    {
      "protocol": "blackhole",
      "settings": {
        "response": {
          "type": "http"
        }
      },
      "tag": "block"
    }
  ],
  "policy": {
    "levels": {
      "8": {
        "connIdle": 300,
        "downlinkOnly": 1,
        "handshake": 4,
        "uplinkOnly": 1
      }
    },
    "system": {
      "statsOutboundUplink": true,
      "statsOutboundDownlink": true
    }
  },
  "routing": {
    "domainStrategy": "Asls",
"rules": []
  },
  "stats": {}
}
END
cat > /var/www/html/sodosokgrpc-$user.txt <<-END
{
    "dns": {
    "servers": [
      "8.8.8.8",
      "8.8.4.4"
    ]
  },
 "inbounds": [
   {
      "port": 10808,
      "protocol": "socks",
      "settings": {
        "auth": "noauth",
        "udp": true,
        "userLevel": 8
      },
      "sniffing": {
        "destOverride": [
          "http",
          "tls"
        ],
        "enabled": true
      },
      "tag": "socks"
    },
    {
      "port": 10809,
      "protocol": "http",
      "settings": {
        "userLevel": 8
      },
      "tag": "http"
    }
  ],
  "log": {
    "loglevel": "none"
  },
  "outbounds": [
    {
      "mux": {
        "enabled": true
      },
      "protocol": "shadowsocks",
      "settings": {
        "servers": [
          {
            "address": "$domain",
            "level": 8,
            "method": "$cipher",
            "password": "$uuid",
            "port": 443
          }
        ]
      },
      "streamSettings": {
        "grpcSettings": {
          "multiMode": true,
          "serviceName": "ss-grpc"
        },
        "network": "grpc",
        "security": "tls",
        "tlsSettings": {
          "allowInsecure": true,
          "serverName": "isi_bug_disini"
        }
      },
      "tag": "proxy"
    },
    {
      "protocol": "freedom",
      "settings": {},
      "tag": "direct"
    },
    {
      "protocol": "blackhole",
      "settings": {
        "response": {
          "type": "http"
        }
      },
      "tag": "block"
    }
  ],
  "policy": {
    "levels": {
      "8": {
        "connIdle": 300,
        "downlinkOnly": 1,
        "handshake": 4,
        "uplinkOnly": 1
      }
    },
    "system": {
      "statsOutboundUplink": true,
      "statsOutboundDownlink": true
    }
  },
  "routing": {
    "domainStrategy": "Asls",
"rules": []
  },
  "stats": {}
}
END
systemctl reload xray >/dev/null 2>&1
service cron restart >/dev/null 2>&1
if [ ! -e /etc/shadowsocks ]; then
  mkdir -p /etc/shadowsocks
fi

if [ -z ${Quota} ]; then
  Quota="0"
fi

c=$(echo "${Quota}" | sed 's/[^0-9]*//g')
d=$((${c} * 1024 * 1024 * 1024))

if [[ ${c} != "0" ]]; then
  echo "${d}" >/etc/shadowsocks/${user}
fi
DATADB=$(cat /etc/shadowsocks/.shadowsocks.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
if [[ "${DATADB}" != '' ]]; then
  sed -i "/\b${user}\b/d" /etc/shadowsocks/.shadowsocks.db
fi
echo "### ${user} ${exp} ${uuid}" >>/etc/shadowsocks/.shadowsocks.d
clear
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "       SHADOWSOCKS         " | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "Remarks      : ${user}" | tee -a /etc/user-create/user.log
echo -e "Aktif Selama : $masaaktif Hari" | tee -a /etc/user-create/user.log
echo -e "Dibuat Pada  : $tnggl" | tee -a /etc/user-create/user.log
echo -e "Berakhir Pada: $expe" | tee -a /etc/user-create/user.log
echo -e "User Quota   : ${Quota} GB" | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "Domain       : ${domain}" | tee -a /etc/user-create/user.log
echo -e "Port TLS     : 443/8443/900" | tee -a /etc/user-create/user.log
echo -e "Password     : ${uuid}" | tee -a /etc/user-create/user.log
echo -e "Cipers       : aes-128-gcm" | tee -a /etc/user-create/user.log
echo -e "Network      : ws/grpc" | tee -a /etc/user-create/user.log
echo -e "Path         : /ss-ws" | tee -a /etc/user-create/user.log
echo -e "ServiceName  : ss-grpc" | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "Link WS TLS  :" | tee -a /etc/user-create/user.log
echo -e "${sslinkws}" | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "Link WS NTLS :" | tee -a /etc/user-create/user.log
echo -e "${nonsslinkws}" | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e "Link GRPC    :" | tee -a /etc/user-create/user.log
echo -e "${sslinkgrpc}" | tee -a /etc/user-create/user.log
echo -e "◇━━━━━━━━━━━━━━━━━━━━━━━◇" | tee -a /etc/user-create/user.log
echo -e ""

#Function to send notification to Telegram Bot
function notiftelebot() {
CHATID="$CHATID"
KEY="$KEY"
TIME="$TIME"
URL="$URL"
TEXT="
◇━━━━━━━━━━━━━━━━━━━━━━━◇
       **SHADOWSOCKS**
◇━━━━━━━━━━━━━━━━━━━━━━━◇
\`Remarks      :\` ${user}
\`Aktif Selama :\` $masaaktif Hari
\`Dibuat Pada  :\` $tnggl
\`Berakhir Pada:\` $expe
\`User Quota   :\` ${Quota} GB
◇━━━━━━━━━━━━━━━━━━━━━━━◇
\`Domain       :\` \`${domain}\`
\`Port TLS     :\` 443/8443/900
\`Password     :\` \`${uuid}\`
\`Cipers       :\` aes-128-gcm
\`Network      :\` ws/grpc
\`Path         :\` /ss-ws
\`ServiceName  :\` ss-grpc
◇━━━━━━━━━━━━━━━━━━━━━━━◇
**Link WS TLS  :**
\`${sslinkws}\`
◇━━━━━━━━━━━━━━━━━━━━━━━◇
**Link WS NTLS :**
\`${nonsslinkws}\`
◇━━━━━━━━━━━━━━━━━━━━━━━◇
**Link GRPC    :**
\`${sslinkgrpc}\`
◇━━━━━━━━━━━━━━━━━━━━━━━◇
"
ENCODED_TEXT=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$TEXT'''))")

curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$ENCODED_TEXT&parse_mode=HTML" $URL >/dev/null
}
# function notif transaksi
function notiftrx() {
CHATID="$CHATID2"
KEY="$KEY2"
TIME="$TIME"
URL="$URL2"
TEXT="
◇━━━━━━━━━━━━━━━━━━◇
        <b>TRANSAKSI BERHASIL</b>
◇━━━━━━━━━━━━━━━━━━◇
☘️ » <code>Trx     :</code> <code>ShadowSocks Account</code>
☘️ » <code>Pembeli :</code> @${pembeli}
☘️ » <code>Domain  :</code> <code>${domain}</code>
☘️ » <code>ISP     :</code> <code>${ISP}</code>
☘️ » <code>Region  :</code> <code>${CITY}</code>
☘️ » <code>User IP :</code> <code>${iplimit} Perangkat</code>
☘️ » <code>Aktif   :</code> <code>${masaaktif} Hari</code>
◇━━━━━━━━━━━━━━━━━━◇
<i>Notif Transaksi Akun SSH...</i>
"'&reply_markup={"inline_keyboard":[[{"text":"☘️ ORDER","url":"https://t.me/alawivpn"},{"text":"TESTI ☘️","url":"https://t.me/configsantritestimoni"}]]}'
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}
clear
notiftelebot
notiftrx
echo -e "SHADOWSOCKS SDH BERHASIL DIKIRIM KE TELEGRAM"
read -n 1 -s -r -p "Press any key to back on menu"
menu
