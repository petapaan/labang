#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
l='\033[0;37m'
BGX="\033[42m"
CYAN="\033[96m"
z="\033[93;1m" # // Hijau
zx="\033[97;1m" # // putih
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[92;1m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
cyan="\033[1;36m"
# // color
grs="\033[1;93m"
bg="\033[42m"
gr="\e[92;1m"
NC='\033[0m'

# // installer Udp
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"

# // Gettings Info
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)

clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
#########################
# // USERNAME IZIN IPP
rm -f /usr/bin/user
username=$(curl -sS https://raw.githubusercontent.com/petapaan/labang/main/bangkalan | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user

# // VALIDITY
rm -f /usr/bin/e
valid=$(curl -sS https://raw.githubusercontent.com/petapaan/labang/main/bangkalan | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e

# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)

clear
# // DAYS LEFT
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certificate=$(((d1 - d2) / 86400))

# // VPS INFORMATION
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status ExpiRED Active | LUNATIC

# // AKTIVATED & EXPIRED
Info="${green}Activated${NC}"
Error="${RED}Expired ${NC}"
#//
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS https://raw.githubusercontent.com/petapaan/labang/main/bangkalan | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="Activated"
else
sts="Expired"
fi
echo -e "\e[32mloading...\e[0m"
clear

# // GETTINGS SYSTEM
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)

#IPVPS=$(curl -s ipinfo.io/ip )
IPVPS=$(curl -sS ipv4.icanhazip.com)

cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear


# // RUNNING SSH
if [[ $ssh_service == "running" ]]; then
   status_ssh="ON"
else
   status_ssh="OFF"
fi

# // RUNNING WEBSOCKET
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="ON"
else
    status_ws_epro="OFF"
fi

# RUNNING HAPROXY
if [[ $haproxy_service == "running" ]]; then
   status_haproxy="ON"
else
   status_haproxy="OFF"
fi

# RUNNING XRAY
if [[ $xray_service == "running" ]]; then
   status_xray="ON"
else
   status_xray="OFF"
fi

# RUNNING NGINX
if [[ $nginx_service == "running" ]]; then
   status_nginx="ON"
else
   status_nginx="OFF"
fi

# RUNNING DROPBEAR
if [[ $dropbear_service == "running" ]]; then
   status_dropbear="ON"
else
   status_dropbear="OFF"
fi
# // UPDATE / REVISI all menu
REVISI="https://raw.githubusercontent.com/petapaan/labang/main/"

# // INFO CREATE ACCOUNT
# \\ Vless account //
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
# \\ Vmess account //
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
# \\ Trojan account //
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(grep -c -E "^#!# " "/etc/xray/config.json")
let ssa=$ssx/2
# // ---- >>>
TZ="\033[1;35m___\033[1;34m___\033[1;32m___\033[1;36m___\033[1;37m___\033[1;34m"
vers="version.Sc 3.09"
# // ----->>>
r="\033[1;31m"  #REDTERANG
a=" ${z}ACCOUNT${NC}" 
BG_RED="\033[45;1m"
G='\033[35;1m'
MODEL2=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${corediilik:-1}))"
cpu_usage+=" %"
vnstat_profile=$(vnstat | sed -n '3p' | awk '{print $1}' | grep -o '[^:]*')
vnstat -i ${vnstat_profile} >/etc/t1
ba=$(curl -s https://pastebin.com/raw/0gWiX6hE)
bulan=$(date +%b)
tahun=$(date +%y)
today=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
todayd=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $8}')
today_v=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $9}')
today_rx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $2}')
today_rxv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $3}')
today_tx=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $5}')
today_txv=$(vnstat -i ${vnstat_profile} | grep today | awk '{print $6}')
if [ "$(grep -wc ${bulan} /etc/t1)" != '0' ]; then
bulan=$(date +%b)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $9}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $10}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $3}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $4}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $6}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan $ba$tahun" | awk '{print $7}')
else
bulan2=$(date +%Y-%m)
month=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $8}')
month_v=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $9}')
month_rx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $2}')
month_rxv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $3}')
month_tx=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $5}')
month_txv=$(vnstat -i ${vnstat_profile} | grep "$bulan2 " | awk '{print $6}')
fi
if [ "$(grep -wc yesterday /etc/t1)" != '0' ]; then
yesterday=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $8}')
yesterday_v=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $9}')
yesterday_rx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $2}')
yesterday_rxv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $3}')
yesterday_tx=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $5}')
yesterday_txv=$(vnstat -i ${vnstat_profile} | grep yesterday | awk '{print $6}')
else
yesterday=NULL
yesterday_v=NULL
yesterday_rx=NULL
yesterday_rxv=NULL
yesterday_tx=NULL
yesterday_txv=NULL
fi
clear

grs="\033[1;93m"
bg="\033[42m"
red="\033[0;31m"
gr="\e[92;1m"
NC='\033[0m'
clear
satu="SSH:"
dua="NGNX:"
tiga="WS:"
empat="PRXY:"
lima="XRY:"
enam="DROP:"
satuu="$status_ssh"
duaa="$status_nginx"
tigaa="$status_ws_epro"
empatt="$status_haproxy"
limaa="$status_xray"
enamm="$status_dropbear"
garis="${grs}║"
if [[ $satuu == "ON" ]]; then
    warna1=${gr}
else
    warna1=${red}
fi
if [[ $duaa == "ON" ]]; then
    warna2=${gr}
else
    warna2=${red}
fi
if [[ $tigaa == "ON" ]]; then
    warna3=${gr}
else
    warna3=${red}
fi
if [[ $empatt == "ON" ]]; then
    warna4=${gr}
else
    warna4=${red}
fi
if [[ $limaa == "ON" ]]; then
    warna5=${gr}
else
    warna5=${red}
fi
if [[ $enamm == "ON" ]]; then
    warna6=${gr}
else
    warna6=${red}
fi
echo -e " ${grs}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e " ${grs}║$NC${bg}        WELCOME TO AUTOSCRIPT PREMIUM BY ALAWI VPN        $NC${grs}║${NC}"
echo -e " ${grs}╚══════════════════════════════════════════════════════════╝${NC}"
echo -e " ${grs}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e " ${grs}║$NC •  OS             : $(printf "%-36.36s %s\n" "$MODEL" "$garis")"
echo -e " ${grs}║$NC •  RAM & USAGE    : $(printf "$gr%-5s $NC%s $gr%-5s $NC%-19s %s\n" "$tram" "MB |" "$uram" "MB" "$garis")"
echo -e " ${grs}║$NC •  UPTIME SERVER  : $(printf "%-36.36s %s\n" "$uptime" "$garis")"
echo -e " ${grs}║$NC •  DATE           : $(printf "%-36.36s %s\n" "$DATEVPS" "$garis")"
echo -e " ${grs}║$NC •  TIME           : $(printf "%-36.36s %s\n" "$TIMEZONE" "$garis")"
echo -e " ${grs}║$NC •  SERVER         : $(printf "%-36.36s %s\n" "$ISP" "$garis")"
echo -e " ${grs}║$NC •  IP VPS         : $(printf "%-36.36s %s\n" "$MYIP" "$garis")"
echo -e " ${grs}║$NC •  DOMAIN         : $(printf "%-36.36s %s\n" "$domain" "$garis")"
echo -e " ${grs}║$NC •  STATUS SCRIPT  : $(printf "$gr%-36.36s %s\n" "$sts" "$garis")"
echo -e " ${grs}║$NC •  CLIENT SCRITP  : $(printf "%-36.36s %s\n" "$username" "$garis")"
echo -e " ${grs}║$NC •  Expired SCRIPT : $(printf "$gr%-9s $NC%s $gr%-2s $NC%-20s %s\n" "$exp" "|" "$certificate" "Days" "$garis")"
echo -e " ${grs}╠══════════════════════════════════════════════════════════╣${NC}"
echo -e " ${grs}║  $(printf "${NC}%-4s ${warna1}%-3s ${NC}%-5s ${warna2}%-3s ${NC}%-3s ${warna3}%-3s ${NC}%-5s ${warna4}%-3s ${NC}%-4s ${warna5}%-3s ${NC}%-5s ${warna6}%-3s ${NC}%s\n" "$satu" "$satuu" "$dua" "$duaa" "$tiga" "$tigaa" "$empat" "$empatt" "$lima" "$limaa" "$enam" "$enamm" "$garis")"
echo -e " ${grs}╚══════════════════════════════════════════════════════════╝${NC}"
akun1="SSH WS"
akun2="VMESS"
akun3="VLESS"
akun4="TROJAN"
akun5="SHDWSCK"
akun01="$ssh1"
akun02="$vma"
akun03="$vla"
akun04="$trb"
akun05="$ssa"
garis="${grs}║"
echo -e " ${grs}╔══════════════════════════════════════════════════════════╗${NC}"
echo -e " ${grs}║${NC}    $(printf "%-10s %-10s %-10s %-10s %-9s %-3s\n" "$akun1" "$akun2" "$akun3" "$akun4" "$akun5" "$garis")"
echo -e " ${grs}║${green}      $(printf "%-10s %-10s %-10s %-10s %-7s %-3s\n" "$akun01" "$akun02" "$akun03" "$akun04" "$akun05" "$garis")"
echo -e " ${grs}╚══════════════════════════════════════════════════════════╝${NC}"
echo -e "${grs} ╔════════════════════════════╦═════════════════════════════╗${NC}"
echo -e "${grs} ║ ${NC}[${gr}01${NC}]• SSH OPENVPN   (${gr}menu${NC}) ${grs}║ ${NC}[${gr}07${NC}]• BACKUP/RESTORE (${gr}menu${NC}) ${grs}║${NC}"
echo -e "${grs} ║                            ║                             ║${NC}"
echo -e "${grs} ║ ${NC}[${gr}02${NC}]• XRAY/VMESS    (${gr}menu${NC}) ${grs}║ ${NC}[${gr}08${NC}]• SETTING        (${gr}menu${NC}) ${grs}║${NC}"
echo -e "${grs} ║                            ║                             ║${NC}"
echo -e "${grs} ║ ${NC}[${gr}03${NC}]• XRAY/VLESS    (${gr}menu${NC}) ${grs}║ ${NC}[${gr}09${NC}]• GOTOP X RAM           ${grs}║${NC}"
echo -e "${grs} ║                            ║                             ║${NC}"
echo -e "${grs} ║ ${NC}[${gr}04${NC}]• TROJAN        (${gr}menu${NC}) ${grs}║ ${NC}[${gr}10${NC}]• RESTART ALL SERVICE   ${grs}║${NC}"
echo -e "${grs} ║                            ║                             ║${NC}"
echo -e "${grs} ║ ${NC}[${gr}05${NC}]• SHADOWSOCKS   (${gr}menu${NC}) ${grs}║ ${NC}[${gr}11${NC}]• INSTALL UDP           ${grs}║${NC}"
echo -e "${grs} ║                            ║                             ║${NC}"
echo -e "${grs} ║ ${NC}[${gr}06${NC}]• TELEGRAM BOT  (${gr}menu${NC}) ${grs}║ ${NC}[${gr}12${NC}]• UPDATE SCRIPT         ${grs}║${NC}"
echo -e "${grs} ╠═══════════╦════════════════╩═════════════════════════════╣${NC}"
today_tk="Hari ini"
yesterday_tk="Kemarin"
month_tk="Sebulan"
garis="${grs}║"
today_val="$today_tx $today_txv"
yesterday_val="$yesterday_tx $yesterday_txv"
month_val="$month_tx $month_txv"
echo -e " ${grs}║$NC   Total   ${grs}║${NC} $(printf "%-14s %-15s %-13s %1s\n" "$today_tk" "$yesterday_tk" "$month_tk" "$garis")"
echo -e " ${grs}║$NC Bantwidth ${grs}║${grenbo} $(printf "%-14s %-15s %-13s %1s\n" "$today_val" "$yesterday_val" "$month_val" "$garis")"
echo -e " ${grs}╚═══════════╩══════════════════════════════════════════════╝${NC}"
echo -e ""
read -p " Pilih 1 sampai 12 : " opt
echo -e ""
case $opt in
1 | 01) clear ; m-sshws ;;
2 | 02) clear ; m-vmess ;;
3 | 03) clear ; m-vless ;;
4 | 04) clear ; m-trojan ;;
5 | 05) clear ; m-ssws ;;
6 | 06) clear ; m-bot ;;
7 | 07) clear ; menu-backup ;;
8 | 08) clear ; m-system ;;
9 | 09) clear ; gotop ;;
10) clear ; reset ;;
11)
clear
echo -e "${grenbo}Udp custom sudah dipasang saat instalasi script!"
sleep 2
menu;;
12) clear ; update ;;
13) clear ; pointing ;;
14) clear ; barupo ;;
15) clear ; m-autobackup ;;
0) clear ; exit ;;
x) clear ; menu ;;
*) clear ; menu ;;
esac
